/// 泛型 generics
/// cargo run --bin 1_泛型_generics

/*
 # 泛型
 
 ## 泛型：提高代码复用能力
 - 处理重复代码问题

 ## 泛型是具体类型或其他属性的抽象代替：
 - 编写的代码不是最终的代码，而是一种"模板"，里面有一些"占位符"。
 - 编译器在编译时将占位符替换为具体的类型。

 例如：fn largest<T>(list: &[T]) -> T{...}
 
 类型参数 T

 ## 函数定义中的泛型
 - 泛型函数：- 参数类型 | - 返回类型

 ## 结构体 | 枚举定义中的泛型

 ## 泛型代码性能
 - 使用泛型的代码和使用具体类型的代码运行速度是一样的
 - 单态化：在编译时将泛型替换为具体类型的过程

*/

fn main() {

}